# plotregression.sh
# $Id: plotregression.sh,v 1.1 2007/08/01 02:47:21 crueda Exp $
#
# This script generates a regression plot given a file with the format:
#		# R2=val
#		val  val
#		val  val
#		...
#
# Under kepler-output/ this is being called as follows:
# 	 ../bin/plotregression.sh goescimisdata.csv goescimisdata.pst "Date: 2007-07-30  Hour: 10:00"
# where goescimisdata.csv was generated by a regression kepler workflow.
#
# Some pstrick parameters are adjusted for proper rendering.
#

if [ "$1" = "" ]; then
	echo "USAGE: ./plotregression.sh goescimisdata.csv [goescimisdata.pst [title]]"
	exit 0
fi

plotdatafile=$1
pst=$2
title=$3
	
R2=`grep "# R2=" $plotdatafile | sed "s/.*=\(.*\)/\1/g"`
m=`grep "# m=" $plotdatafile | sed "s/.*=\(.*\)/\1/g"`
b=`grep "# b=" $plotdatafile | sed "s/.*=\(.*\)/\1/g"`
title="$title\nR\$^2\$ = $R2   m = $m  b = $b"

psttmp="_tmp_plotregression.pst"
plotcmdsfile="_tmp_plotregression.gp"

rm -f $psttmp

printcmd() {
	cmd=$1
	echo "$cmd" >> $plotcmdsfile
}

echo "# gnuplot commands" > $plotcmdsfile

if [ "$pst" != "" ]; then
	printcmd "set terminal pstricks"
	printcmd "set output \"$psttmp\""
	printcmd "set size square"
fi
printcmd "set nokey"
printcmd "set title \"$title\""
printcmd "set ylabel \"CIMIS (\$^o\$C)\""
printcmd "set xlabel \"GOES (\$^o\$C)\""
printcmd "f(x) = m*x + b"
printcmd "fit f(x) '$plotdatafile' using 1:2 via m,b"
printcmd "plot \"$plotdatafile\" with points pointtype 5 pointsize 2 notitle, f(x) with lines linetype 3 linewidth 2 notitle"

gnuplot -persist $plotcmdsfile

if [ $? = 0 ]; then
	if [ "$pst" != "" ]; then
		# fix dotsize value so we get visible circles,
		# and the regression line: for some reason, the generated pst uses PST@Dotted, so
		# I'm hacking that to generate a line instead of dots:
		sed 's/{dotsize=[^}]*/{dotsize=0.2/g' $psttmp |\
		sed 's/newpsobject{PST@Dotted}{psline}{.*/newpsobject{PST@Dotted}{psline}{linewidth=.003,linestyle=dashed,dash=1 .01}/g' >  $pst
	fi
fi
